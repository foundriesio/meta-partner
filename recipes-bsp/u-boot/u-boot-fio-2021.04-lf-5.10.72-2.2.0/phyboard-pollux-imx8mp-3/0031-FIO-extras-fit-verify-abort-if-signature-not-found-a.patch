From bc34c45568647fc820d69d1b84a5f65fa79d34bb Mon Sep 17 00:00:00 2001
From: Ricardo Salveti <ricardo@foundries.io>
Date: Thu, 20 Aug 2020 18:24:52 -0300
Subject: [PATCH 031/322] [FIO extras] fit: verify: abort if signature not
 found and strict

Prefer aborting the fit verification process when a signature node is
not found by U-Boot and FIT SIGNATURE STRICT is enabled. This is a way
to always force a proper signature verification via sig verify.

Signed-off-by: Ricardo Salveti <ricardo@foundries.io>
Signed-off-by: Oleksandr Suvorov <oleksandr.suvorov@foundries.io>
---
 common/image-fit-sig.c | 25 +++++++++++++++++++------
 common/image-sig.c     |  1 +
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/common/image-fit-sig.c b/common/image-fit-sig.c
index 34ebb8edfe2..c9044b7c0a2 100644
--- a/common/image-fit-sig.c
+++ b/common/image-fit-sig.c
@@ -15,6 +15,7 @@ DECLARE_GLOBAL_DATA_PTR;
 #endif /* !USE_HOSTCC*/
 #include <fdt_region.h>
 #include <image.h>
+#include <linux/kconfig.h>
 #include <u-boot/rsa.h>
 #include <u-boot/rsa-checksum.h>
 
@@ -197,9 +198,15 @@ int fit_image_verify_required_sigs(const void *fit, int image_noffset,
 	*no_sigsp = 1;
 	sig_node = fdt_subnode_offset(sig_blob, 0, FIT_SIG_NODENAME);
 	if (sig_node < 0) {
-		debug("%s: No signature node found: %s\n", __func__,
-		      fdt_strerror(sig_node));
-		return 0;
+		if (IS_ENABLED(CONFIG_FIT_SIGNATURE_STRICT)) {
+			printf("%s: No signature node found: %s\n", __func__,
+			       fdt_strerror(sig_node));
+			return -1;
+		} else {
+			debug("%s: No signature node found: %s\n", __func__,
+			      fdt_strerror(sig_node));
+			return 0;
+		}
 	}
 
 	fdt_for_each_subnode(noffset, sig_blob, sig_node) {
@@ -429,9 +436,15 @@ static int fit_config_verify_required_sigs(const void *fit, int conf_noffset,
 	/* Work out what we need to verify */
 	sig_node = fdt_subnode_offset(sig_blob, 0, FIT_SIG_NODENAME);
 	if (sig_node < 0) {
-		debug("%s: No signature node found: %s\n", __func__,
-		      fdt_strerror(sig_node));
-		return 0;
+		if (IS_ENABLED(CONFIG_FIT_SIGNATURE_STRICT)) {
+			printf("%s: No signature node found: %s\n", __func__,
+			       fdt_strerror(sig_node));
+			return -1;
+		} else {
+			debug("%s: No signature node found: %s\n", __func__,
+			      fdt_strerror(sig_node));
+			return 0;
+		}
 	}
 
 	/* Get required-mode policy property from DTB */
diff --git a/common/image-sig.c b/common/image-sig.c
index 4abd3c080f7..a70ac3bc5db 100644
--- a/common/image-sig.c
+++ b/common/image-sig.c
@@ -18,6 +18,7 @@ DECLARE_GLOBAL_DATA_PTR;
 #include <image.h>
 #include <u-boot/rsa.h>
 #include <u-boot/rsa-checksum.h>
+#include <linux/kconfig.h>
 
 #define IMAGE_MAX_HASHED_NODES		100
 
-- 
2.34.1

