From cee785f60ca1591bfb786c6b174feaa404475d18 Mon Sep 17 00:00:00 2001
From: Igor Opaniuk <igor.opaniuk@foundries.io>
Date: Thu, 18 Feb 2021 17:42:26 +0200
Subject: [PATCH 101/322] [FIO internal] imx: mmc: detect offset of next image
 in runtime

Detect offset of the next boot image in runtime for all iMX-based SoCs
if SECONDARY_BOOT_RUNTIME_DETECTION and SECONDARY_BOOT_SECTOR_OFFSET
are set.

1. Dynamic detection of offset for the next boot image based on the
value SRC_GPR10_PERSIST_SECONDARY_BOOT bit.
2. In case of regular boot set that bit so we can automatically boot
into recovery boot path after WDT reset occurs.

Don't autoset seconday boot bit, as we boot into primary boot path by
default on WDOG reset.

Signed-off-by: Igor Opaniuk <igor.opaniuk@foundries.io>
Signed-off-by: Oleksandr Suvorov <oleksandr.suvorov@foundries.io>
---
 board/freescale/common/mmc.c     | 21 +++++++++++++++++++++
 board/freescale/imx8mm_evk/spl.c | 21 +++++++++++++++++++++
 2 files changed, 42 insertions(+)

diff --git a/board/freescale/common/mmc.c b/board/freescale/common/mmc.c
index ab1652d6972..3877f0300ea 100644
--- a/board/freescale/common/mmc.c
+++ b/board/freescale/common/mmc.c
@@ -49,3 +49,24 @@ void board_late_mmc_env_init(void)
 	sprintf(cmd, "mmc dev %d", dev_no);
 	run_command(cmd, 0);
 }
+
+#if defined(CONFIG_SECONDARY_BOOT_RUNTIME_DETECTION) && \
+    defined(CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR)
+unsigned long spl_mmc_get_uboot_raw_sector(struct mmc *mmc,
+					   unsigned long raw_sect)
+{
+	int boot_secondary = boot_mode_getprisec();
+	unsigned long offset = CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR;
+
+	if (boot_secondary) {
+		offset += CONFIG_SECONDARY_BOOT_SECTOR_OFFSET;
+		printf("SPL: Booting secondary boot path: using 0x%lx offset "
+		       "for next boot image\n", offset);
+	} else {
+		printf("SPL: Booting primary boot path: using 0x%lx offset "
+		       "for next boot image\n", offset);
+	}
+
+	return offset;
+}
+#endif
diff --git a/board/freescale/imx8mm_evk/spl.c b/board/freescale/imx8mm_evk/spl.c
index 4ca63ff1ba0..906b4a8deaf 100644
--- a/board/freescale/imx8mm_evk/spl.c
+++ b/board/freescale/imx8mm_evk/spl.c
@@ -326,3 +326,24 @@ void board_init_f(ulong dummy)
 
 	board_init_r(NULL, 0);
 }
+
+#if defined(CONFIG_SECONDARY_BOOT_RUNTIME_DETECTION) && \
+    defined(CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_USE_SECTOR)
+unsigned long spl_mmc_get_uboot_raw_sector(struct mmc *mmc,
+					   unsigned long raw_sect)
+{
+	int boot_secondary = boot_mode_getprisec();
+	unsigned long offset = CONFIG_SYS_MMCSD_RAW_MODE_U_BOOT_SECTOR;
+
+	if (boot_secondary) {
+		offset += CONFIG_SECONDARY_BOOT_SECTOR_OFFSET;
+		printf("SPL: Booting secondary boot path: using 0x%lx offset "
+		       "for next boot image\n", offset);
+	} else {
+		printf("SPL: Booting primary boot path: using 0x%lx offset "
+		       "for next boot image\n", offset);
+	}
+
+	return offset;
+}
+#endif
-- 
2.34.1

