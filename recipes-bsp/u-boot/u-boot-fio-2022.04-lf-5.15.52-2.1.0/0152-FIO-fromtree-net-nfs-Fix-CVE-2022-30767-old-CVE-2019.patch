From ac8fa0afffb9bcd85632f0390019c2257c2ac2ab Mon Sep 17 00:00:00 2001
From: Andrea zi0Black Cappa <zi0Black@protonmail.com>
Date: Wed, 18 May 2022 16:30:08 +0000
Subject: [PATCH 152/233] [FIO fromtree] net: nfs: Fix CVE-2022-30767 (old
 CVE-2019-14196)

This patch mitigates the vulnerability identified via CVE-2019-14196.

The previous patch was bypassed/ineffective, and now the vulnerability
is identified via CVE-2022-30767. The patch removes the sanity check
introduced to mitigate CVE-2019-14196 since it's ineffective.
filefh3_length is changed to unsigned type integer, preventing negative
numbers from being used during comparison with positive values during
size sanity checks.

Signed-off-by: Andrea zi0Black Cappa <zi0Black@protonmail.com>
(cherry picked from commit bdbf7a05e26)
Signed-off-by: Oleksandr Suvorov <oleksandr.suvorov@foundries.io>
---
 net/nfs.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/net/nfs.c b/net/nfs.c
index 70d0e08bde9..3003f54aac4 100644
--- a/net/nfs.c
+++ b/net/nfs.c
@@ -57,7 +57,7 @@ static ulong nfs_timeout = NFS_TIMEOUT;
 
 static char dirfh[NFS_FHSIZE];	/* NFSv2 / NFSv3 file handle of directory */
 static char filefh[NFS3_FHSIZE]; /* NFSv2 / NFSv3 file handle */
-static int filefh3_length;	/* (variable) length of filefh when NFSv3 */
+static unsigned int filefh3_length;	/* (variable) length of filefh when NFSv3 */
 
 static enum net_loop_state nfs_download_state;
 static struct in_addr nfs_server_ip;
@@ -578,8 +578,6 @@ static int nfs_lookup_reply(uchar *pkt, unsigned len)
 		filefh3_length = ntohl(rpc_pkt.u.reply.data[1]);
 		if (filefh3_length > NFS3_FHSIZE)
 			filefh3_length  = NFS3_FHSIZE;
-		if (((uchar *)&(rpc_pkt.u.reply.data[0]) - (uchar *)(&rpc_pkt) + filefh3_length) > len)
-			return -NFS_RPC_DROP;
 		memcpy(filefh, rpc_pkt.u.reply.data + 2, filefh3_length);
 	}
 
-- 
2.25.1

