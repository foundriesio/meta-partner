From 17483412cf39e742450edf074cd60804bd0e422c Mon Sep 17 00:00:00 2001
From: Oleksandr Suvorov <oleksandr.suvorov@foundries.io>
Date: Wed, 13 Jul 2022 16:57:51 +0300
Subject: [PATCH 035/233] [FIO toup] spl: move SPL_CRC32 option to lib/Kconfig

All hash algorithm options are collected in lib/Kconfig. Move
SPL_CRC32 there as well.

Signed-off-by: Oleksandr Suvorov <oleksandr.suvorov@foundries.io>
---
 common/spl/Kconfig | 11 -----------
 lib/Kconfig        | 11 +++++++++++
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/common/spl/Kconfig b/common/spl/Kconfig
index e8dd463fdd0..48bb4692db6 100644
--- a/common/spl/Kconfig
+++ b/common/spl/Kconfig
@@ -429,17 +429,6 @@ config SYS_MMCSD_RAW_MODE_EMMC_BOOT_PARTITION
 	  the eMMC EXT_CSC_PART_CONFIG selection should be overridden in SPL
 	  by user defined partition number.
 
-config SPL_CRC32
-	bool "Support CRC32"
-	default y if SPL_LEGACY_IMAGE_SUPPORT || SPL_EFI_PARTITION
-	default y if SPL_ENV_SUPPORT || TPL_BLOBLIST
-	help
-	  Enable this to support CRC32 in uImages or FIT images within SPL.
-	  This is a 32-bit checksum value that can be used to verify images.
-	  For FIT images, this is the least secure type of checksum, suitable
-	  for detected accidental image corruption. For secure applications you
-	  should consider SHA1 or SHA256.
-
 config SPL_FIT_IMAGE_TINY
 	bool "Remove functionality from SPL FIT loading to reduce size"
 	depends on SPL_FIT
diff --git a/lib/Kconfig b/lib/Kconfig
index acd3d51bc96..88ab9f62ecc 100644
--- a/lib/Kconfig
+++ b/lib/Kconfig
@@ -471,6 +471,17 @@ config SHA_HW_ACCEL
 
 if SPL
 
+config SPL_CRC32
+	bool "Enable CRC32 support in SPL"
+	default y if SPL_LEGACY_IMAGE_SUPPORT || SPL_EFI_PARTITION
+	default y if SPL_ENV_SUPPORT || TPL_BLOBLIST
+	help
+	  This option enables support of hashing using CRC32 algorithm.
+	  The CRC32 algorithm produces 32-bit checksum value. For FIT
+	  images, this is the least secure type of checksum, suitable for
+	  detected accidental image corruption. For secure applications you
+	  should consider SHA256 or SHA384.
+
 config SPL_SHA1
 	bool "Enable SHA1 support in SPL"
 	default y if SHA1
-- 
2.40.1

