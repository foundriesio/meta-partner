From 91d0a9b7df0fb0b5bdcaf266cff685676e51e502 Mon Sep 17 00:00:00 2001
From: Jorge Ramirez-Ortiz <jorge@foundries.io>
Date: Tue, 30 Aug 2022 16:04:03 +0200
Subject: [PATCH 163/233] [FIO tosquash] drivers: tee: i2c: fix SE050 errata

Fix build issue when the feature is not selected

Fixes: 53fc827020 ("drivers: tee: i2c: support the NXP SE05x
                    probe errata")

Signed-off-by: Jorge Ramirez-Ortiz <jorge@foundries.io>
Signed-off-by: Ricardo Salveti <ricardo@foundries.io>
---
 drivers/tee/optee/Kconfig |  9 ++++-----
 drivers/tee/optee/i2c.c   | 18 +++++++++---------
 2 files changed, 13 insertions(+), 14 deletions(-)

diff --git a/drivers/tee/optee/Kconfig b/drivers/tee/optee/Kconfig
index 05dfe2c9a87..f914e02dd6c 100644
--- a/drivers/tee/optee/Kconfig
+++ b/drivers/tee/optee/Kconfig
@@ -40,16 +40,15 @@ config OPTEE_TA_SCP03
 
 config TEE_I2C_NXP_SE05X_ERRATA
 	bool "Enable NXP SE05X Errata"
-       select TEE_I2C_NXP_SE05X_ERRATA_IN_BUS
 	default y
 	help
-         This config prevents the I2C trampoline driver from probing
-         on every transfer.
+	 This config prevents the I2C trampoline driver from probing
+	 on every transfer.
 
 config TEE_I2C_NXP_SE05X_ERRATA_IN_BUS
 	int "I2C bus where to apply the NXP SE05X errata"
-       depends on TEE_I2C_NXP_SE05X_ERRATA
-       default 0
+	depends on TEE_I2C_NXP_SE05X_ERRATA
+	default 0
 
 endmenu
 
diff --git a/drivers/tee/optee/i2c.c b/drivers/tee/optee/i2c.c
index a3ea34d4a26..e1b25349098 100644
--- a/drivers/tee/optee/i2c.c
+++ b/drivers/tee/optee/i2c.c
@@ -40,18 +40,18 @@ static struct udevice *get_chip_dev(int bnum, int addr)
 	struct udevice *chip;
 	struct udevice *bus;
 
-	if (IS_ENABLED(CONFIG_TEE_I2C_NXP_SE05X_ERRATA)) {
-		if (bnum == CONFIG_TEE_I2C_NXP_SE05X_ERRATA_IN_BUS &&
-		    addr == NXP_SE05X_ADDR) {
-			if (uclass_get_device_by_seq(UCLASS_I2C, bnum, &bus))
-				return NULL;
+#if defined(CONFIG_TEE_I2C_NXP_SE05X_ERRATA)
+	if (bnum == CONFIG_TEE_I2C_NXP_SE05X_ERRATA_IN_BUS &&
+	    addr == NXP_SE05X_ADDR) {
+		if (uclass_get_device_by_seq(UCLASS_I2C, bnum, &bus))
+			return NULL;
 
-			if (i2c_get_chip(bus, addr, 0, &chip))
-				return NULL;
+		if (i2c_get_chip(bus, addr, 0, &chip))
+			return NULL;
 
-			return chip;
-		}
+		return chip;
 	}
+#endif
 
 	if (i2c_get_chip_for_busnum(bnum, addr, 0, &chip))
 		return NULL;
-- 
2.40.1

