From d8afb817651a1f5b4015e36f1067c35dfb6caa49 Mon Sep 17 00:00:00 2001
From: Felix Radensky <felix.r@variscite.com>
Date: Mon, 11 May 2020 09:00:57 +0300
Subject: [PATCH] imx8m: drivers/ddr: Add support for specifying DDR PHY
 firmware offset

By default DDR PHY firmware is located at offset 0 from SPL image.
Add option to explicitly specify DDR PHY firmware offset.

---
 arch/arm/include/asm/arch-imx8m/ddr.h | 4 +++-
 drivers/ddr/imx/imx8m/Kconfig         | 3 +++
 drivers/ddr/imx/imx8m/ddrphy_train.c  | 3 ++-
 drivers/ddr/imx/imx8m/helper.c        | 4 ++--
 4 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/arch/arm/include/asm/arch-imx8m/ddr.h b/arch/arm/include/asm/arch-imx8m/ddr.h
index 0f1e832c03..b015cfcb79 100644
--- a/arch/arm/include/asm/arch-imx8m/ddr.h
+++ b/arch/arm/include/asm/arch-imx8m/ddr.h
@@ -683,6 +683,8 @@ struct dram_fsp_msg {
 };
 
 struct dram_timing_info {
+	/* ddrphy firmware offset */
+	unsigned int ddrphy_fw_offset;
 	/* umctl2 config */
 	struct dram_cfg_param *ddrc_cfg;
 	unsigned int ddrc_cfg_num;
@@ -704,7 +706,7 @@ struct dram_timing_info {
 
 extern struct dram_timing_info dram_timing;
 
-void ddr_load_train_firmware(enum fw_type type);
+void ddr_load_train_firmware(enum fw_type type, unsigned int start_offset);
 int ddr_init(struct dram_timing_info *timing_info);
 int ddr_cfg_phy(struct dram_timing_info *timing_info);
 void load_lpddr4_phy_pie(void);
diff --git a/drivers/ddr/imx/imx8m/Kconfig b/drivers/ddr/imx/imx8m/Kconfig
index dcae464356..a68cf34e75 100644
--- a/drivers/ddr/imx/imx8m/Kconfig
+++ b/drivers/ddr/imx/imx8m/Kconfig
@@ -47,4 +47,7 @@ config IMX8M_VDD_SOC_850MV
 config IMX8M_LPDDR4_FREQ0_2400MTS
 	bool "imx8m PDDR4 freq0 change from 4000MTS to 2400MTS"
 
+config IMX8M_DDRPHY_FW_OFFSET
+	int "Offset of DDR PHY firmware from the end of the SPL image"
+	default 0
 endmenu
diff --git a/drivers/ddr/imx/imx8m/ddrphy_train.c b/drivers/ddr/imx/imx8m/ddrphy_train.c
index 8227719aaa..bb141334a7 100644
--- a/drivers/ddr/imx/imx8m/ddrphy_train.c
+++ b/drivers/ddr/imx/imx8m/ddrphy_train.c
@@ -36,7 +36,8 @@ int ddr_cfg_phy(struct dram_timing_info *dram_timing)
 
 		/* load the dram training firmware image */
 		dwc_ddrphy_apb_wr(0xd0000, 0x0);
-		ddr_load_train_firmware(fsp_msg->fw_type);
+		ddr_load_train_firmware(fsp_msg->fw_type,
+					dram_timing->ddrphy_fw_offset);
 
 		/* load the frequency set point message block parameter */
 		dram_cfg = fsp_msg->fsp_cfg;
diff --git a/drivers/ddr/imx/imx8m/helper.c b/drivers/ddr/imx/imx8m/helper.c
index b3e63834ca..a6f1814131 100644
--- a/drivers/ddr/imx/imx8m/helper.c
+++ b/drivers/ddr/imx/imx8m/helper.c
@@ -24,13 +24,13 @@ DECLARE_GLOBAL_DATA_PTR;
 #define DDR_TRAIN_CODE_BASE_ADDR IP2APB_DDRPHY_IPS_BASE_ADDR(0)
 
 /* We need PHY iMEM PHY is 32KB padded */
-void ddr_load_train_firmware(enum fw_type type)
+void ddr_load_train_firmware(enum fw_type type, unsigned int start_offset)
 {
 	u32 tmp32, i;
 	u32 error = 0;
 	unsigned long pr_to32, pr_from32;
 	unsigned long fw_offset = type ? IMEM_2D_OFFSET : 0;
-	unsigned long imem_start = (unsigned long)&_end + fw_offset;
+	unsigned long imem_start = (unsigned long)&_end + start_offset + fw_offset;
 	unsigned long dmem_start;
 
 #ifdef CONFIG_SPL_OF_CONTROL
