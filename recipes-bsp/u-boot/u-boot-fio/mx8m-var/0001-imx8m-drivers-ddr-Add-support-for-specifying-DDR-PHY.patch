From de9d3b2dfe6c49bbb92cc302a2fcf62df0aaa8ad Mon Sep 17 00:00:00 2001
From: Nate Drude <nate.d@variscite.com>
Date: Thu, 28 Jul 2022 13:39:50 -0500
Subject: [PATCH] imx8m: drivers/ddr: Add support for specifying DDR PHY
 firmware offset

By default DDR PHY firmware is located at offset 0 from SPL image.
Add option to explicitly specify DDR PHY firmware offset.

(cherry picked from commit 7fca4a64cfb7da74f98ab40e160f4f47b6edea90)

# Conflicts:
#	drivers/ddr/imx/imx8m/Kconfig
(cherry picked from commit 5579201f0ebf3dec56473000b28f095cc6f5dd13)
---
 arch/arm/include/asm/arch-imx8m/ddr.h | 4 +++-
 drivers/ddr/imx/imx8m/Kconfig         | 3 +++
 drivers/ddr/imx/phy/ddrphy_train.c    | 3 ++-
 drivers/ddr/imx/phy/helper.c          | 4 ++--
 4 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/arch/arm/include/asm/arch-imx8m/ddr.h b/arch/arm/include/asm/arch-imx8m/ddr.h
index 5e4fbecf052..95195030526 100644
--- a/arch/arm/include/asm/arch-imx8m/ddr.h
+++ b/arch/arm/include/asm/arch-imx8m/ddr.h
@@ -683,6 +683,8 @@ struct dram_fsp_msg {
 };
 
 struct dram_timing_info {
+	/* ddrphy firmware offset */
+	unsigned int ddrphy_fw_offset;
 	/* umctl2 config */
 	struct dram_cfg_param *ddrc_cfg;
 	unsigned int ddrc_cfg_num;
@@ -704,7 +706,7 @@ struct dram_timing_info {
 
 extern struct dram_timing_info dram_timing;
 
-void ddr_load_train_firmware(enum fw_type type);
+void ddr_load_train_firmware(enum fw_type type, unsigned int start_offset);
 int ddr_init(struct dram_timing_info *timing_info);
 int ddr_cfg_phy(struct dram_timing_info *timing_info);
 void load_lpddr4_phy_pie(void);
diff --git a/drivers/ddr/imx/imx8m/Kconfig b/drivers/ddr/imx/imx8m/Kconfig
index 15a2b030f8a..a3b7ad55479 100644
--- a/drivers/ddr/imx/imx8m/Kconfig
+++ b/drivers/ddr/imx/imx8m/Kconfig
@@ -51,4 +51,7 @@ config IMX8M_LPDDR4_FREQ0_3200MTS
 config IMX8M_4G_LPDDR4
 	bool "imx8m 4GB LPDDR4"
 
+config IMX8M_DDRPHY_FW_OFFSET
+	int "Offset of DDR PHY firmware from the end of the SPL image"
+	default 0
 endmenu
diff --git a/drivers/ddr/imx/phy/ddrphy_train.c b/drivers/ddr/imx/phy/ddrphy_train.c
index cd905f952c6..91504d6a2db 100644
--- a/drivers/ddr/imx/phy/ddrphy_train.c
+++ b/drivers/ddr/imx/phy/ddrphy_train.c
@@ -36,7 +36,8 @@ int ddr_cfg_phy(struct dram_timing_info *dram_timing)
 
 		/* load the dram training firmware image */
 		dwc_ddrphy_apb_wr(0xd0000, 0x0);
-		ddr_load_train_firmware(fsp_msg->fw_type);
+		ddr_load_train_firmware(fsp_msg->fw_type,
+					dram_timing->ddrphy_fw_offset);
 
 		/* load the frequency set point message block parameter */
 		dram_cfg = fsp_msg->fsp_cfg;
diff --git a/drivers/ddr/imx/phy/helper.c b/drivers/ddr/imx/phy/helper.c
index 43b40a8029c..4e4f70144e2 100644
--- a/drivers/ddr/imx/phy/helper.c
+++ b/drivers/ddr/imx/phy/helper.c
@@ -25,13 +25,13 @@ DECLARE_GLOBAL_DATA_PTR;
 #define DDR_TRAIN_CODE_BASE_ADDR IP2APB_DDRPHY_IPS_BASE_ADDR(0)
 
 /* We need PHY iMEM PHY is 32KB padded */
-void ddr_load_train_firmware(enum fw_type type)
+void ddr_load_train_firmware(enum fw_type type, unsigned int start_offset)
 {
 	u32 tmp32, i;
 	u32 error = 0;
 	unsigned long pr_to32, pr_from32;
 	unsigned long fw_offset = type ? IMEM_2D_OFFSET : 0;
-	unsigned long imem_start = (unsigned long)&_end + fw_offset;
+	unsigned long imem_start = (unsigned long)&_end + start_offset + fw_offset;
 	unsigned long dmem_start;
 
 #ifdef CONFIG_SPL_OF_CONTROL
-- 
2.34.1

